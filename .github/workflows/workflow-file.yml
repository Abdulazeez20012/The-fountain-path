name: The Fountain Path CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: az200012
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript check
        run: npx tsc --noEmit
        
      - name: Run linting
        run: npx eslint . --ext .ts,.tsx --max-warnings 0
        continue-on-error: true
        
      - name: Run tests
        run: npm test
        continue-on-error: true
        
      - name: Test MongoDB connection
        run: |
          timeout 30 bash -c 'until mongosh --host localhost:27017 --username root --password example --eval "db.adminCommand(\"ping\")" > /dev/null 2>&1; do sleep 1; done'
          echo "MongoDB is ready"

  build-android:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Expo CLI
        run: npm install -g @expo/cli
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build Android APK
        run: |
          expo build:android --type apk --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  build-ios:
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Expo CLI
        run: npm install -g @expo/cli
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build iOS IPA
        run: |
          expo build:ios --type archive --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  deploy-web:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Expo CLI
        run: npm install -g @expo/cli
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build web version
        run: expo build:web
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web-build